name: ci-cd
on: [push]
jobs:
  CI:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: "Build base image"
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
            DOCKER_USER=raniakh
            BOT_TAG=$(sha256sum requirements.txt | cut -c1-15 )
            RES=$(curl -u $DOCKER_USER:$DOCKER_TOKEN https://registry.hub.docker.com/v2/repositories/$DOCKER_USER/discord_bot_quotes_base/tags | { grep $BOT_TAG || true; } )
            if [ -z "$RES" ]; then
              echo "No image with this tag $BOT_TAG"
              docker login -u $DOCKER_USER -p $DOCKER_TOKEN
              docker build -t $DOCKER_USER/discord_bot_quotes_base:$BOT_TAG -f base.Dockerfile .
              docker push $DOCKER_USER/discord_bot_quotes_base:$BOT_TAG 
              docker tag $DOCKER_USER/discord_bot_quotes_base:$BOT_TAG $DOCKER_USER/discord_bot_quotes_base:latest 
              docker push $DOCKER_USER/discord_bot_quotes_base:latest 
              docker logout 
            else
              echo "Found image with tag $BOT_TAG"
            fi  
            docker pull $DOCKER_USER/discord_bot_quotes_base:latest 
            docker tag $DOCKER_USER/discord_bot_quotes_base:latest discord_bot_quotes_base:latest 
      - name: "Build and containerize app"
        run: docker build -t discord_bot_quotes:latest -f Dockerfile src/
   
      - name: "Test containerized app"
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }} 
        run: |
          docker run -d -p 40044:40044 --name bot -e DISCORD_TOKEN=${DISCORD_TOKEN} discord_bot_quotes:latest
          sleep 5
          docker ps --all
          curl localhost:40044 | grep 'is alive'
          docker logs bot
      - name: "Push containerized app"
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN}}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          DOCKER_USER=raniakh
          docker login -u $DOCKER_USER -p $DOCKER_TOKEN
          docker tag discord_bot_quotes $DOCKER_USER/discord_bot_quotes:$GITHUB_RUN_NUMBER
          docker push $DOCKER_USER/discord_bot_quotes:$GITHUB_RUN_NUMBER
          docker tag $DOCKER_USER/discord_bot_quotes:$GITHUB_RUN_NUMBER $DOCKER_USER/discord_bot_quotes:latest
          docker push $DOCKER_USER/discord_bot_quotes:latest
          docker logout
  CD:
    needs: [CI]
    runs-on: [kubernetes]
    steps:
      - uses: actions/checkout@v2
      - name: "Add Discord Secret"
        env:
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          TERRAFORM_TOKEN: ${{ secrets.TERRAFORM_TOKEN }} 
        run: |
          kubectl delete secret discord-secret || true
          kubectl create secret generic discord-secret --from-literal='token=$DISCORD_TOKEN'
      - name: "Deploy"    
        run: |
          cat << EOF | tee /home/vagrant/.terraform.d/credentials.tfrc.json > /dev/null
          {
            "credentials": {
              "app.terraform.io": {
                "token": "$TERRAFORM_TOKEN"
              }
            }
          }
          EOF
          terraform init
          
      - name: "Terraform plan"
        run: |
          terraform plan
          
      - name: "Terraform apply"
        run: |
          terraform apply -auto-approve      

                 